# coding:utf-8
from rest_framework import serializers
from .models import User


class UserSerializer(serializers.Serializer):                # 它序列化的方式很类似于Django的forms
    id = serializers.IntegerField(read_only=True)
    username = serializers.CharField(max_length=30)
    #password = serializers.CharField(max_length=200)
    phone = serializers.CharField(max_length=30, default="")
    email = serializers.EmailField(default="")
    SEX_CHOICES = (('F', 'Female'), ('M', 'Male'))
    sex = serializers.CharField(max_length=10, default="")
    age = serializers.IntegerField(default=-1)
    created = serializers.DateTimeField(default="")

    def create(self, validated_data):
        """
        Create and return a new `Snippet` instance, given the validated data.
        """
        return User.objects.create(**validated_data)

    def update(self, instance, validated_data):
        """
        Update and return an existing `Snippet` instance, given the validated data.
        """
        instance.username = validated_data.get('username', instance.username)
        instance.password = validated_data.get('password', instance.password)
        instance.phone = validated_data.get('phone', instance.phone)
        instance.email = validated_data.get('email', instance.email)
        instance.sex = validated_data.get('sex', instance.sex)
        instance.age = validated_data.get('age', instance.age)
        instance.created = validated_data.get('created', instance.created)
        instance.save()
        return instance
